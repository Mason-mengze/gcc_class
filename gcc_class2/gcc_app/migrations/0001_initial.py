# Generated by Django 4.1 on 2022-09-12 12:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Score",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "score",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="UsersAccountInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "studentid",
                    models.CharField(db_column="studentId", max_length=32, unique=True),
                ),
                ("passwd", models.CharField(max_length=32)),
                ("user_id", models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                "db_table": "users_account_info",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="UsersInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "studentid",
                    models.CharField(
                        blank=True,
                        db_column="studentId",
                        max_length=32,
                        null=True,
                        unique=True,
                    ),
                ),
                ("brithday", models.DateField(blank=True, null=True)),
                (
                    "idnumber",
                    models.CharField(
                        blank=True, db_column="idNumber", max_length=18, null=True
                    ),
                ),
                (
                    "candidatenumber",
                    models.CharField(
                        blank=True,
                        db_column="candidateNumber",
                        max_length=32,
                        null=True,
                    ),
                ),
                ("status", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "collegename",
                    models.CharField(
                        blank=True, db_column="collegeName", max_length=15, null=True
                    ),
                ),
                (
                    "majorname",
                    models.CharField(
                        blank=True, db_column="majorName", max_length=32, null=True
                    ),
                ),
                (
                    "classname",
                    models.CharField(
                        blank=True, db_column="className", max_length=32, null=True
                    ),
                ),
                (
                    "entrydate",
                    models.DateField(blank=True, db_column="entryDate", null=True),
                ),
                ("domicile", models.CharField(blank=True, max_length=32, null=True)),
                (
                    "politicalstatus",
                    models.CharField(
                        blank=True,
                        db_column="politicalStatus",
                        max_length=32,
                        null=True,
                    ),
                ),
                ("national", models.CharField(blank=True, max_length=15, null=True)),
                ("education", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "users",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="gcc_app.usersaccountinfo",
                    ),
                ),
            ],
            options={
                "db_table": "users_info",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "coursetitle",
                    models.CharField(db_column="courseTitle", max_length=32),
                ),
                (
                    "schoolyear",
                    models.CharField(
                        blank=True, db_column="schoolYear", max_length=10, null=True
                    ),
                ),
                (
                    "schoolterm",
                    models.CharField(
                        blank=True, db_column="schoolTerm", max_length=5, null=True
                    ),
                ),
                ("teacher", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "courseid",
                    models.CharField(
                        blank=True, db_column="courseId", max_length=10, null=True
                    ),
                ),
                (
                    "coursesection",
                    models.CharField(
                        blank=True, db_column="courseSection", max_length=15, null=True
                    ),
                ),
                (
                    "courseweek",
                    models.CharField(
                        blank=True, db_column="courseWeek", max_length=15, null=True
                    ),
                ),
                ("campus", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "courseroom",
                    models.CharField(
                        blank=True, db_column="courseRoom", max_length=15, null=True
                    ),
                ),
                (
                    "classname",
                    models.CharField(
                        blank=True, db_column="className", max_length=60, null=True
                    ),
                ),
                (
                    "hourscomposition",
                    models.CharField(
                        blank=True,
                        db_column="hoursComposition",
                        max_length=25,
                        null=True,
                    ),
                ),
                (
                    "weeklyhours",
                    models.CharField(
                        blank=True, db_column="weeklyHours", max_length=5, null=True
                    ),
                ),
                (
                    "totalhours",
                    models.CharField(
                        blank=True, db_column="totalHours", max_length=5, null=True
                    ),
                ),
                ("credit", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "users",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="gcc_app.usersaccountinfo",
                    ),
                ),
            ],
            options={
                "db_table": "schedule",
                "managed": True,
            },
        ),
    ]
